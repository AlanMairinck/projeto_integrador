/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import model.DAO.WalletDAO;
import model.Trader;
import model.Wallet;
import util.TableView;

/**
 *
 * @author alanm
 */
public final class WalletTradeUI extends javax.swing.JFrame {
    
    Trader _trader;
    JButton btnView = new JButton("View");
    JButton btnDel = new JButton("Del");
    JButton btnRename = new JButton("Rename");
    NumberFormat _nf;
    WalletDAO _wDAO;
    List<Wallet> _listWallet;
    /**
     * Creates new form WalletTradeUI
     * @param trader
     */
    public WalletTradeUI(Trader trader) {
        initComponents();
        this.loadComponents(trader);
    }

    private WalletTradeUI() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWallet = new javax.swing.JTable();
        lblAmountInvested = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblName.setText("jLabel1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblName)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblWallet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null", "null", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblWallet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblWalletMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblWallet);

        lblAmountInvested.setText("Total Investido: ");

        lblAmount.setText("jLabel2");

        btnCreate.setText("Novo");
        btnCreate.setMaximumSize(new java.awt.Dimension(71, 23));
        btnCreate.setMinimumSize(new java.awt.Dimension(71, 23));
        btnCreate.setPreferredSize(new java.awt.Dimension(71, 23));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblAmountInvested)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAmount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAmountInvested)
                        .addComponent(lblAmount))
                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblWalletMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblWalletMouseClicked
        
        int column = tblWallet.columnAtPoint(evt.getPoint());
        int row = tblWallet.rowAtPoint(evt.getPoint());
        
        int option;
                
        if(row < tblWallet.getRowCount() && row >= 0 && column < tblWallet.getColumnCount() && column > 0)
        {
            Object value = tblWallet.getValueAt(row, column);
            int cod = (int)tblWallet.getModel().getValueAt(row, 0);
            String nm_wallet = tblWallet.getModel().getValueAt(row, 1).toString().toUpperCase();
            
            if(value instanceof JButton)
            {
                ((JButton)value).doClick();
                JButton button = (JButton)value;
                switch(button.getName())
                {
                    case "view":
                        AssetsTradeUI assetsUI = new AssetsTradeUI(this._wDAO.getById(cod));
                        assetsUI.setVisible(true);
                        this.dispose();
                        break;
                    case "del":
                        option = JOptionPane.showConfirmDialog(null,"A carteira " 
                                + nm_wallet + " será excluída.\n Confirma essa ação?\n",
                        "Escolha um",JOptionPane.YES_NO_OPTION);
                        
                        if(option == 0)
                        {
                            this._wDAO.delete(cod);
                            
                            JOptionPane.showMessageDialog(null,
                                "Carteira " + nm_wallet +" excluída com sucesso", //mensagem
                                "Carteira", // titulo da janela
                                JOptionPane.INFORMATION_MESSAGE);
                            
                            this.loadTable();
                        }
                        
                        break;
                    case "rename":
                        String new_nm_wallet = JOptionPane.showInputDialog("Insira o novo nome da Carteira:").trim().toUpperCase();
                        Boolean exists = false;
                        
                        for(Wallet w : this._listWallet)
                        {
                            if(w.getNm_wallet().toUpperCase().equals(new_nm_wallet))
                            {
                                exists = true;
                                break;
                            }
                        }
                        
                        if(exists)
                        {
                            JOptionPane.showMessageDialog(null,
                                                            "O nome já utilizado por outra carteira.", //mensagem
                                                            "Carteira", // titulo da janela
                                                            JOptionPane.INFORMATION_MESSAGE);
                        }
                        else
                        {
                            Wallet w = this._listWallet.get(row);
                            w.setNm_wallet(new_nm_wallet);

                            this._wDAO.update(w);

                            JOptionPane.showMessageDialog(null,
                                    "Carteira renomeada com sucesso.\n"
                                    +"Novo nome: " + new_nm_wallet, //mensagem
                                    "Carteira", // titulo da janela
                                    JOptionPane.INFORMATION_MESSAGE);

                            this.loadTable();
                        }
                        break;
                }
            }
        }
    }//GEN-LAST:event_tblWalletMouseClicked

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        String nm_wallet = JOptionPane.showInputDialog("Insira o nome da Carteira:").trim().toUpperCase();
        
        if(nm_wallet.trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null,
                        "Você deve informar um nome para a carteira.\n", //mensagem
                        "Carteira", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        Boolean exists = false;
                        
        for(Wallet w : this._listWallet)
        {
            if(w.getNm_wallet().toUpperCase().equals(nm_wallet))
            {
                exists = true;
                break;
            }
        }
                        
        if(exists)
        {
            JOptionPane.showMessageDialog(null,
            "O nome já utilizado por outra carteira.", //mensagem
            "Carteira", // titulo da janela
            JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        Wallet w = new Wallet();
        WalletDAO wDAO = new WalletDAO();

        w.setNm_wallet(nm_wallet);
        w.setDt_created(new Date());
        w.setAmount_invested(new BigDecimal("0"));
        w.setTrader(_trader);
        wDAO.insert(w);       

        JOptionPane.showMessageDialog(null,
        "Carteira " + nm_wallet.toUpperCase() + " criada com sucesso.\n", //mensagem
        "Carteira", // titulo da janela
        JOptionPane.INFORMATION_MESSAGE);
        
        this.loadTable();
    }//GEN-LAST:event_btnCreateActionPerformed

    public void loadTable()
    {
        this._listWallet = this._wDAO.getByIdTrader(this._trader.getId_trader());
        
        Object[] tColumns = {"Cod","Carteira","Montante","View","Del","Edit"};
        Object[][] tRows = new Object[_listWallet.size()][tColumns.length];// {{};};
        //Object[] tColumnsList = null;// {"Carteira","Montante","","",""};
        BigDecimal amount = new BigDecimal("0");
        
        for(int i=0; i < _listWallet.size(); i++)
        {
            amount = amount.add(_listWallet.get(i).getAmount_invested());
            
            for(int j=1;j<=tColumns.length;j++)
            {
                int index = tColumns.length - j;
                switch(index)
                {
                    
                    case 0:
                        tRows[i][index]= this._listWallet.get(i).getId_wallet();
                        break;
                    case 1:
                        tRows[i][index]= this._listWallet.get(i).getNm_wallet();
                        break;
                    case 2:
                        tRows[i][index]= this._nf.format(this._listWallet.get(i).getAmount_invested());
                        break;
                    case 3:
                        tRows[i][index]= this.btnView;
                        break;
                    case 4:
                        tRows[i][index]= this.btnDel;
                        break;
                    case 5:
                        tRows[i][index]= this.btnRename;
                        break;
                }
            }
        }
        TableView.viewTable(tblWallet, tRows, tColumns);
        lblAmount.setText(this._nf.format(amount));
    }
        
    public void loadComponents(Trader trader)
    {
        this.setLocationRelativeTo(null);
        this._trader = trader;
        this._wDAO = new WalletDAO();
        this.btnView.setName("view");
        this.btnDel.setName("del");
        this.btnRename.setName("rename");
        this.lblName.setText(_trader.getNm_trader());
        this._nf = NumberFormat.getCurrencyInstance();
        this.loadTable();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WalletTradeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WalletTradeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WalletTradeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WalletTradeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WalletTradeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblAmountInvested;
    private javax.swing.JLabel lblName;
    private javax.swing.JTable tblWallet;
    // End of variables declaration//GEN-END:variables
}
