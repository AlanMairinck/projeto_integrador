/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import model.DAO.TraderDAO;
import model.Permission;
import model.Trader;
import util.UtilServices;

/**
 *
 * @author alanm
 */
public class RegisterTradeUI extends javax.swing.JFrame {

    /**
     * Creates new form RegisterTradeUI
     */
    public RegisterTradeUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.maskFields();
        this.setTitle("Cadastro Trader");
//        URL iconPath = getClass().getResource("/images/Screenshot_2.png");
//        Image icon = Toolkit.getDefaultToolkit().getImage(iconPath);
//        this.setIconImage(icon);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        txtNome = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtBirthday = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtCPF = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 400));

        jLabel1.setText("Nome Completo:");

        jLabel2.setText("CPF:");

        jLabel3.setText("Data Anivers√°rio:");

        jLabel4.setText("E-mail:");

        jLabel5.setText("Senha:");

        jLabel6.setText("Confirme a Senha:");

        txtConfirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmPasswordActionPerformed(evt);
            }
        });

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("CADASTRO");

        btnSave.setText("Salvar");
        btnSave.setMaximumSize(new java.awt.Dimension(75, 23));
        btnSave.setMinimumSize(new java.awt.Dimension(75, 23));
        btnSave.setPreferredSize(new java.awt.Dimension(75, 23));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancelar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(4, 4, 4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtBirthday)
                                .addComponent(txtPassword)
                                .addComponent(txtCPF)
                                .addComponent(txtEmail)
                                .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                                .addComponent(txtConfirmPassword))))
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel4, jLabel5});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtBirthday, txtCPF, txtConfirmPassword, txtEmail, txtNome, txtPassword});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancel, btnSave});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        WellcomeTradeUI wellcome = new WellcomeTradeUI();
        wellcome.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            // TODO add your handling code here:
            Trader t = null;// new Trader();
            TraderDAO tDAO = new TraderDAO();
            
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String password = new String(txtPassword.getPassword()).trim();
            String confirmPassword = new String(txtConfirmPassword.getPassword()).trim();
            
            if (txtNome.getText().isEmpty() || txtNome.getText() == null)
            {
                JOptionPane.showMessageDialog(null,
                        "Nome Obrigat√≥rio.\n\n" + "Por favor preencha o nome.", //mensagem
                        "Nome", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (txtEmail.getText().isEmpty() || txtEmail.getText() == null)
            {
                JOptionPane.showMessageDialog(null,
                        "E-mail Obrigat√≥rio.\n\n" + "Por favor preencha o e-mail.", //mensagem
                        "E-mail", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if(!UtilServices.isValidEmail(txtEmail.getText()))
            {
                JOptionPane.showMessageDialog(null,
                        "E-mail n√£o v√°lido.", //mensagem
                        "E-mail", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (txtCPF.getText().isEmpty() || txtCPF.getText() == null || txtBirthday.getText().equals("___-___-___.__"))
            {
                JOptionPane.showMessageDialog(null,
                        "CPF Obrigat√≥rio.\n\n" + "Por favor preencha o CPF.", //mensagem
                        "CPF", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (UtilServices.isValidCPF(txtCPF.getText()))
            {
                JOptionPane.showMessageDialog(null,
                        "CPF Inv√°lido.", //mensagem
                        "CPF", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (txtBirthday.getText().isEmpty() || txtBirthday.getText() == null || txtBirthday.getText().equals("__/__/____"))
            {
                JOptionPane.showMessageDialog(null,
                        "Data de anivers√°rio obrigat√≥ria.\n\n" + "Por favor preencha a data de anivers√°rio.", //mensagem
                        "Data de Anivers√°rio", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if(!UtilServices.isValidDate(txtBirthday.getText()))
            {
                JOptionPane.showMessageDialog(null,
                        "Data inv√°lida.", //mensagem
                        "Data", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if (password.isEmpty() || password == null)
            {
                JOptionPane.showMessageDialog(null,
                        "Senha Obrigat√≥ria.\n\n" + "Por favor preencha a senha.", //mensagem
                        "Senha", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            if(!UtilServices.isValidPassword(password, confirmPassword))
            {
                JOptionPane.showMessageDialog(null,
                        "As senhas n√£o conferem.", //mensagem
                        "Senha", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            String cpf = UtilServices.deformCPF(txtCPF.getText());
            Date dtBirthday = formato.parse(txtBirthday.getText());
            t = tDAO.getTraderCPF(cpf);
            
            if(t != null)
            {
                if(t.getCpf().equals(cpf) && t.getDt_birthday().equals(dtBirthday) && t.getNm_trader().equals(txtNome.getText()))
                {
                    JOptionPane.showMessageDialog(null,
                        "Usu√°rio j√° cadastrado.", //mensagem
                        "Usu√°rio", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
                if(t.getCpf().equals(cpf))
                {
                    JOptionPane.showMessageDialog(null,
                        "CPF j√° cadastrado.", //mensagem
                        "CPF", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
            
            Permission p = new Permission(2, "user");
            
            t = new Trader(txtNome.getText(), cpf, dtBirthday, password, txtEmail.getText(), p);
            
//            t.setNm_trader(txtNome.getText());
//            t.setCpf(UtilServices.deformCPF(txtCPF.getText()));
//            t.setDt_birthday(formato.parse(txtBirthday.getText()));
//            t.setEmail(txtEmail.getText());
//            t.setPassword(password);
//            t.setPermission(p);

            tDAO.insert(t);
            
            JOptionPane.showMessageDialog(null,
                        "Cadastro Realizado com Sucesso.", //mensagem
                        "Sucesso", // titulo da janela
                        JOptionPane.INFORMATION_MESSAGE);
            
            LoginTradeUI login = new LoginTradeUI();
            login.setVisible(true);
            dispose();
            
        } catch (ParseException ex) {
            Logger.getLogger(RegisterTradeUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RegisterTradeUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtConfirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmPasswordActionPerformed
    
    private void maskFields()
    {
        //Container janela = getContentPane();
             setLayout(null);

             //Define as m√°scaras
             MaskFormatter mascaraCpf = null;
             MaskFormatter mascaraData = null;

             try{
                    //mascaraCep = new MaskFormatter("#####-###");
                   // mascaraTel = new MaskFormatter("(##)####-####");
                    mascaraCpf = new MaskFormatter("###.###.###-##");
                    mascaraData = new MaskFormatter("##/##/####");
                   // mascaraCep.setPlaceholderCharacter('_');
                   // mascaraTel.setPlaceholderCharacter('_');
                    mascaraCpf.setPlaceholderCharacter('_');
                    mascaraData.setPlaceholderCharacter('_');
             }
             catch(ParseException excp) {
                    System.err.println("Erro na formata√ß√£o: " + excp.getMessage());
                    System.exit(-1);
             }
             txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mascaraCpf));
             txtBirthday.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mascaraData));
             //Seta as m√°scaras nos objetos JFormattedTextField
             //JFormattedTextField jFormattedTextCep = new JFormattedTextField(mascaraCep);
             //JFormattedTextField jFormattedTextTel = new JFormattedTextField(mascaraTel);
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterTradeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterTradeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterTradeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterTradeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterTradeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField txtBirthday;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
